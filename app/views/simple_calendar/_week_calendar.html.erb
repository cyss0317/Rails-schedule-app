<div class="weekly-calendar">
  <%= render partial: 'shared/calendar_header', locals: { calendar: calendar, start_date: date_range[0], current: "Week"} %>

  <div class="table flex flex-col justify-center">
    <div class="table-header">
      <div class="empty-tr overflow-auto">
        <% if Flipper.enabled?(:admin, Flipper::Actor.new(current_user.email)) && @users_total_hours_for_week.present? %>
          <div class="employee-hours">Total Hours:</div>
        <% else %>
          <div class="employee-hours">Employee:</div>
        <% end %>
          <% @users_total_hours_for_week.each do |user, hours|  %>
            <div class="employee-hours shadow" style="background-color: <%= user.color %>"><%= "#{user.first_name}" %> <%= ": #{hours}" if Flipper.enabled?(:admin, Flipper::Actor.new(current_user.email)) && @users_total_hours_for_week.present? %> </div>
          <% end %>
      </div>
      <% date_range.slice(0, 7).each do |day| %>
        <div class="weekly-date">
          <div class="date <%= 'today-date' if day.today? %>"><%= "#{day.mday}" %></div>
          <p><%= "#{t('date.abbr_day_names')[day.wday]}" %></p>


          <% if DayOff.for_day_filtered_by_date(day.in_time_zone).present? %>
            <% day_offs = DayOff.for_day_filtered_by_date(day.in_time_zone).sort_by(&:start_time)  %>
            <% day_offs.each do |day_off| %>
                <% if current_user.first_name == day_off.user.first_name %>
                  <p><%= link_to "#{day_off.off_time_info(day.in_time_zone)}", edit_day_off_url(day_off.id), class: "day-off your-day-off" %></p>
                <% else %>
                  <p class="day-off "> <%= day_off.off_time_info(day.in_time_zone)%> </p>
                <% end %>

                <% if day_offs.length == 2 %>

                <% elsif day_off.morning_off?(day.in_time_zone) %>
                  <p> <%= link_to "Request Evening Off", "day_offs/new?start_time=#{day.in_time_zone.change(hour: 15)}&end_time=#{day.in_time_zone.change(hour:23)}", class: "request-day-off-btn" %> </p>
                <% elsif day_off.evening_off?(day.in_time_zone)%>
                  <p> <%= link_to "Request Morning Off", "day_offs/new?start_time=#{day.in_time_zone.change(hour: 9)}&end_time=#{day.in_time_zone.change(hour: 15)}", class: "request-day-off-btn" %> </p>
                <% end %>
            <% end %>

            <%# TODO: if it is admin user, need to let them edit or not? %>
            <%# TODO: if it is yourselv, we should display link to edit %>
          <% else %>
            <p> <%= link_to "Request Day Off", "day_offs/new?start_time=#{day.to_s}", class: "request-day-off-btn" %> </p>
          <% end %>


        </div>
      <% end %>
    </div>

    <div class="table-body" >
      <% date_range.each_slice(7) do |week| %>
          <div class="hours">
   
            <% (8..23).each do |hour| %>
              <div class="hour-cell-row-separator" style="top: <%= table_row_top(hour) - 17 %>px"></div>
              <div class="hour-cell h-10" style="top: <%= table_row_top(hour)  %>px"><%= hour < 12 ? "#{idx_to_time(hour)}AM" : "#{idx_to_time(hour)}PM" %></div>
            <% end %>
          </div>
          <% week.each do |day| %>
              <%# link_to "TEST", new_meeting_path( start_date: day ) %>

              <div data-date=<%= day.to_s %> class="week-day meetings <%= calendar.td_classes_for(day).join(" ") %> <%= 'admin-table' if Flipper.enabled?(:admin, Flipper::Actor.new(current_user.email)) %>">
                <% if defined?(Haml) && respond_to?(:block_is_haml?) && block_is_haml?(passed_block) %>
                  <% capture_haml(day, sorted_events.fetch(day, []), &passed_block) %>
                <% else %>
                <%# TODO: now need to use `calendar.render_shifts_by_hour(meetings)` and render meetings          %>
                <% calendar.render_shifts_by_hour(sorted_events.fetch(day,[])).each_with_index do |shifts_by_hour, hour_idx| %>
                  <% shifts_by_hour.each_with_index do |shift, idx| %>
                    <%= render partial: "meetings/weekly_meeting", locals: {meeting: shift, idx: idx, meetings_count: shifts_by_hour.count, hour_idx: hour_idx, classes: "weekly-meeting-#{shift.id}", style: { height: "2.5rem"}} %>
                  <% end %>
                <% end %>

                <%# sorted_events.fetch(day, []).each_with_index do |event, idx| %>
                  <%# render partial: "meetings/weekly_meeting", locals: {meeting: event, idx: idx, meetings_count: sorted_events.count, morning_shift_count: morning_shift_count, evening_shift_count: evening_shift_count,  classes: "weekly-meeting-#{event.id}", style: { height: "2.5rem"}} %>
                <%# end %>
              </div>
            <% end %>
          <% end %>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    row_height = <%= Meeting::HOUR_HEIGHT_IN_PX %>
    // current time liner
    current_time_liner = document.createElement("div")
    current_time_liner.classList.add("current-time-liner", "relative")
    current_time = new Date()
    current_hour = current_time.getHours()
    current_minutes = current_time.getMinutes()
    current_time_height_from_top = (current_hour - 8) * row_height + current_minutes /60 * row_height
    current_time_liner.style.top = `${current_time_height_from_top}px`
    // add date attribute to the current time liner to be used in the click event

    current_time.setMinutes(0)
    current_time.setSeconds(0)
    current_time_liner.addEventListener("click", (e) => {
      e.stopPropagation()
      window.location.href = "/meetings/new?start_date=" + encodeURIComponent(current_time)
    })

    // append the current time liner to the today column//
    today_shift_column = document.querySelector(".today")
    today_shift_column?.appendChild(current_time_liner)

    // onClick scroll down to the current time
    document.querySelector(".today-date")?.addEventListener("click", (e) => {
      current_time_liner = document.querySelector(".current-time-liner")
      y = current_time_liner.getBoundingClientRect().top + window.pageYOffset - 200

      window.scrollTo({top: y})
    })


    table_body = document.querySelectorAll(".admin-table")
    table_body.forEach(el => {
      el.addEventListener("click", (e) => {
        //time configuration
        window.target = e

        clicked_el = e.target.getClientRects()[0]
        table_cell_height = clicked_el.height / 17
        y_axis = e.clientY - clicked_el.top

      total_hours = y_axis / table_cell_height
      clicked_spot_into_hour = Math.floor(total_hours)
      exact_minutes = Math.round((total_hours - clicked_spot_into_hour) * 60)
      rounded_down_minutes = Math.floor(exact_minutes / 15) * 15
      clicked_time_in_hour = `${(8 + clicked_spot_into_hour)}:00`

        //date configuration
        date = e.target.getAttribute("data-date")
        window.location.href =`/meetings/new?start_date=${date} ${clicked_time_in_hour}`
        date_and_time = new Date(`${date} ${clicked_time_in_hour}`)
        console.log(date_and_time)
        //window.location.href = "/meetings/new?start_date=" + encodeURIComponent(date_and_time)
        //table_body.querySelector(".meeting-form").style.display = "block"
      
      })
    })

    employee_hours = document.querySelectorAll(".employee-hours")
    employee_hours?.forEach(el => {
      el.addEventListener("click", (e) => {
        document.querySelector(".empty-tr")?.classList.toggle("overflow-auto")
        document.querySelector(".empty-tr")?.classList.toggle("z-20")

      })
    })
  })
</script>