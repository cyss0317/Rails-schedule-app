<div class="weekly-calendar">
  <%= render partial: 'shared/calendar_header', locals: { calendar: calendar, start_date: date_range[0], current: "Week"} %>

  <div class="table flex flex-col justify-center">
    <div class="table-header">
      <div class="empty-tr"></div>
      <% date_range.slice(0, 7).each do |day| %>
        <div class="weekly-date">
          <div class="date <%= 'today-date' if day.today? %>"><%= "#{day.mday}" %></div>
          <p><%= "#{t('date.abbr_day_names')[day.wday]}" %></p>
        </div>
      <% end %>
    </div>

    <div class="table-body <%= 'admin-table' if Flipper.enabled?(:admin, Flipper::Actor.new(current_user.email)) %>" >
      <% date_range.each_slice(7) do |week| %>
          <div class="hours">
            <% (8..24).each do |hour| %>
              <div class="hour-cell h-10" style="top: <%= table_row_top(hour)  %>px"><%= hour < 12 ? "#{idx_to_time(hour)}AM" : "#{idx_to_time(hour)}PM" %></div>
              <div class="hour-cell-row-separator" style="top: <%= table_row_top(hour) - 17 %>px"></div>
            <% end %>
          </div>
          <% week.each do |day| %>
              <%# link_to "TEST", new_meeting_path( start_date: day ) %>

              <div data-date=<%= day.to_s %> class="week-day meetings <%= calendar.td_classes_for(day).join(" ") %>">
                <% if defined?(Haml) && respond_to?(:block_is_haml?) && block_is_haml?(passed_block) %>
                  <% capture_haml(day, sorted_events.fetch(day, []), &passed_block) %>
                <% else %>
                <%# TODO: now need to use `calendar.render_shifts_by_hour(meetings)` and render meetings          %>
                <% calendar.render_shifts_by_hour(sorted_events.fetch(day,[])).each_with_index do |shifts_by_hour, hour_idx| %>
                  <% shifts_by_hour.each_with_index do |shift, idx| %>
                    <%= render partial: "meetings/weekly_meeting", locals: {meeting: shift, idx: idx, meetings_count: shifts_by_hour.count, hour_idx: hour_idx, classes: "weekly-meeting-#{shift.id}", style: { height: "2.5rem"}} %>
                  <% end %>
                <% end %>
                <%# debugger %>


                <%# sorted_events.fetch(day, []).each_with_index do |event, idx| %>
                  <%# render partial: "meetings/weekly_meeting", locals: {meeting: event, idx: idx, meetings_count: sorted_events.count, morning_shift_count: morning_shift_count, evening_shift_count: evening_shift_count,  classes: "weekly-meeting-#{event.id}", style: { height: "2.5rem"}} %>
                <%# end %>
              </div>
            <% end %>
          <% end %>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    // current time liner
    current_time_liner = document.createElement("div")
    current_time_liner.classList.add("current-time-liner", "relative")
    current_time = new Date()
    current_hour = current_time.getHours()
    current_minutes = current_time.getMinutes()
    //debugger
    current_time_height_from_top = (current_hour - 8) * 100 + current_minutes /60 * 100
    current_time_liner.style.top = `${current_time_height_from_top}px`
    // add date attribute to the current time liner to be used in the click event

    current_time_liner.addEventListener("click", (e) => {
      debugger
      window.location.href = "/meetings/new?start_date=" + encodeURIComponent(current_time)
      return;
    })

    // append the current time liner to the today column//
    today_shift_column = document.querySelector(".today")
    today_shift_column.appendChild(current_time_liner)

    // onClick scroll down to the current time
    document.querySelector(".today-date").addEventListener("click", (e) => {
      current_time_liner = document.querySelector(".current-time-liner")
      y = current_time_liner.getBoundingClientRect().top + window.pageYOffset - 200

      window.scrollTo({top: y})
    })


    table_body = document.querySelector(".admin-table")
    table_body.addEventListener("click", (e) => {
      //time configuration
      window.target = e

      clicked_el = e.target.getClientRects()[0]
      table_cell_height = clicked_el.height / 17
      y_axis = e.clientY - clicked_el.top

      total_hours = y_axis / table_cell_height
      clicked_spot_into_hour = Math.floor(total_hours)
      exact_minutes = Math.round((total_hours - clicked_spot_into_hour) * 60)
      rounded_down_minutes = Math.floor(exact_minutes / 15) * 15
      clicked_time_in_hour = `${(8 + clicked_spot_into_hour)}:${rounded_down_minutes}`

      //date configuration
      date = e.target.getAttribute("data-date")
      date_and_time = new Date(`${date} ${clicked_time_in_hour}`)
      console.log(date_and_time)
    debugger
       window.location.href = "/meetings/new?start_date=" + encodeURIComponent(date_and_time)
      //table_body.querySelector(".meeting-form").style.display = "block"
    
    })

      const dragElement = document.getElementById('dragElement');

    let startY;
    let currentY;

    dragElement.addEventListener('mousedown', startDrag);
    dragElement.addEventListener('mousemove', drag);
    dragElement.addEventListener('mouseup', endDrag);

    function startDrag(event) {
      startY = event.clientY;
      currentY = dragElement.offsetTop;
    }

    function drag(event) {
      if (startY) {
        const deltaY = event.clientY - startY;
        dragElement.style.top = currentY + deltaY + 'px';
      }
    }

    function endDrag() {
      startY = null;
    }

  })
</script>