<div class="weekly-calendar">
  <%= render partial: 'shared/calendar_header', locals: { calendar: calendar, start_date: date_range[0], current: "Week"} %>

  <div class="table flex flex-col justify-center">
    <div class="table-header">
      <div class="empty-tr"></div>
      <% date_range.slice(0, 7).each do |day| %>
        <div class="weekly-date">
          <div class="date <%= 'today-date' if day.today? %>"><%= "#{day.mday}" %></div>
          <p><%= "#{t('date.abbr_day_names')[day.wday]}" %></p>
        </div>
      <% end %>
    </div>

    <div class="table-body" >
      <% date_range.each_slice(7) do |week| %>
          <div class="hours">
            <% (8..24).each do |hour| %>
              <div class="hour-cell h-10" style="top: <%= table_row_top(hour)  %>px"><%= hour < 12 ? "#{idx_to_time(hour)}AM" : "#{idx_to_time(hour)}PM" %></div>
              <div class="hour-cell-row-separator" style="top: <%= table_row_top(hour) - 17 %>px"></div>
            <% end %>
          </div>

          <% week.each do |day| %>
            <%= content_tag :div, data: { date: day.to_s }, class: calendar.td_classes_for(day).push("flex-col")  do %>
              <%# link_to "TEST", new_meeting_path( start_date: day ) %>
              <% if defined?(Haml) && respond_to?(:block_is_haml?) && block_is_haml?(passed_block) %>
                <% capture_haml(day, sorted_events.fetch(day, []), &passed_block) %>
              <% else %>
              <div data-date=<%= day.to_s %> class="meetings <%= calendar.td_classes_for(day).join(" ") %>">
                <% sorted_events.fetch(day, []).each_with_index do |event, idx| %>
                  <%= render partial: "meetings/weekly_meeting", locals: {meeting: event, idx: idx, classes: "weekly-meeting-#{event.id}", style: { height: "2.5rem"}} %>
                <% end %>
              </div>
              <% end %>
            <% end %>
          <% end %>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    document.addEventListener("click", (e) => {
      //time configuration
      window.target = e
      console.log(e.target.className)
      console.log( e.clientY)

      clicked_el = e.target.getClientRects()[0]
      table_cell_height = clicked_el.height / 17
      y_axis = e.clientY - clicked_el.top

      total_hours = y_axis / table_cell_height
      clicked_spot_into_hour = Math.floor(total_hours)
      minutes = Math.round((total_hours - clicked_spot_into_hour) * 60)
      clicked_time_in_hour = `${(8 + clicked_spot_into_hour)}:${minutes}`

      //date configuration
      date = e.target.getAttribute("data-date")
      date_and_time = new Date(`${date} ${clicked_time_in_hour}`)
      console.log(date_and_time)
    })
  })
</script>